# Security Configuration Assessment
# CIS Checks for RHEL 8
# Copyright (C) 2015-2020, Wazuh Inc.
#
# This program is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation
#
# Based on:
# Center for Internet Security Red Hat Enterprise Linux 8 Benchmark v1.0 - 09-30-2019

policy:
  id: "cis_rhel8"
  file: "cis_rhel8_linux.yml"
  name: "CIS Benchmark for Red Hat Enterprise Linux 8"
  description: "This document provides prescriptive guidance for establishing a secure configuration posture for Red Hat Enterprise Linux 8 systems running on x86 and x64 platforms. This document was tested against Red Hat Enterprise Linux 8"
  references:
    - https://www.cisecurity.org/cis-benchmarks/

requirements:
  title: "Check RHEL8 family platform"
  description: "Requirements for running the policy against RHEL 8 family."
  condition: any
  rules:
    - 'f:/etc/redhat-release -> r:^Red Hat Enterprise Linux && r:release 8'
    - 'f:/etc/redhat-release -> r:^CentOS && r:release 8'
    - 'f:/etc/redhat-release -> r:^Cloud && r:release 8'
    - 'f:/etc/redhat-release -> r:^Oracle && r:release 8'
    - 'f:/etc/redhat-release -> r:^Better && r:release 8'
    - 'f:/etc/redhat-release -> r:^OpenVZ && r:release 8'
#    - 'f:/etc/system-release -> r:^Amazon && r:release 2'

variables:
  $sshd_file: /etc/ssh/sshd_config

checks:

###############################################
# 3 Network Configuration
###############################################
###############################################
# 3.1 Network Parameters (Host Only)
###############################################
# 3.1.1 Ensure IP forwarding is disabled (Scored)
  - id: 5525 
    title: "Ensure IP forwarding is disabled"
    description: "The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to tell the system whether it can forward packets or not."
    rationale: "Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router." 
    remediation: "Run the following commands to restore the default parameters and set the active kernel parameters: # grep -Els \"^\\s*net\\.ipv4\\.ip_forward\\s*=\\s*1\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri \"s/^\\s*(net\\.ipv4\\.ip_forward\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\"  \"s/^\\s*(net\\.ipv4\\.ip_forward\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.ipv4.ip_forward=0; sysctl -w net.ipv4.route.flush=1    &&   # grep -Els \"^\\s*net\\.ipv6\\.conf\\.all\\.forwarding\\s*=\\s*1\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri \"s/^\\s*(net\\.ipv6\\.conf\\.all\\.forwarding\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.ipv6.conf.all.forwarding=0; sysctl -w net.ipv6.route.flush=1"
    compliance:
      - cis: ["3.1.1"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:grep -Rh -E -s ^\s*net\.ipv4\.ip_forward\s*=\s*1 /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf -> !r:\w+'
      - 'c:grep -Rh -E -s ^\s*net\.ipv6\.conf\.all\.forwarding\s*=\s*1 /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf -> !r:\w+'
      - 'c:sysctl net.ipv4.ip_forward -> !r:^\s*net.ipv4.ip_forward\s*=\s*0'
      - 'c:sysctl net.ipv6.conf.all.forwarding -> !r:^\s*net.ipv6.conf.all.forwarding\s*=\s*0'


# 3.1.2 Ensure packet redirect sending is disabled (Scored)
  - id: 5526
    title: "Ensure packet redirect sending is disabled"
    description: "ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects."
    rationale: "An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system." 
    remediation: "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.send_redirects = 0 net.ipv4.conf.default.send_redirects = 0 .Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.send_redirects=0; # sysctl -w net.ipv4.conf.default.send_redirects=0; # sysctl -w net.ipv4.route.flush=1"
    compliance:
      - cis: ["3.1.2"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:grep -Rh net\.ipv4\.conf\.all\.send_redirects /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv4.conf.all.send_redirects\s*=\s*0'
      - 'c:grep -Rh net\.ipv4\.conf\.default\.send_redirects /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv4.conf.default.send_redirects\s*=\s*0'
      - 'c:sysctl net.ipv4.conf.all.send_redirects -> r:^\s*net.ipv4.conf.all.send_redirects\s*=\s*0'
      - 'c:sysctl net.ipv4.conf.default.send_redirects -> r:^\s*net.ipv4.conf.default.send_redirects\s*=\s*0'

###############################################
# 3.2 Network Parameters (Host and Router)
###############################################
# 3.2.1 Ensure source routed packets are not accepted (Scored)
  - id: 5527
    title: "Ensure source routed packets are not accepted"
    description: "In networking, source routing allows a sender to partially or fully specify the route packets  take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used."
    rationale: "Setting net.ipv4.conf.all.accept_source_route, net.ipv4.conf.default.accept_source_route, net.ipv6.conf.all.accept_source_route and net.ipv6.conf.default.accept_source_route to 0 disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing."
    remediation: "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.accept_source_route = 0  net.ipv4.conf.default.accept_source_route = 0  net.ipv6.conf.all.accept_source_route = 0  net.ipv6.conf.default.accept_source_route = 0 and Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.accept_source_route=0; # sysctl -w net.ipv4.conf.default.accept_source_route=0; # sysctl -w net.ipv6.conf.all.accept_source_route=0; # sysctl -w net.ipv6.conf.default.accept_source_route=0; # sysctl -w net.ipv4.route.flush=1; # sysctl -w net.ipv6.route.flush=1"
    compliance:
      - cis: ["3.2.1"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.conf.all.accept_source_route -> r:^\s*net.ipv4.conf.all.accept_source_route\s*=\s*0'
      - 'c:sysctl net.ipv4.conf.default.accept_source_route -> r:^\s*net.ipv4.conf.default.accept_source_route\s*=\s*0'
      - 'c:grep -Rh net\.ipv4\.conf\.all\.accept_source_route /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv4.conf.all.accept_source_route\s*=\s*0'
      - 'c:grep -Rh net\.ipv4\.conf\.default\.accept_source_route /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv4.conf.default.accept_source_route\s*=\s*0'
      - 'c:sysctl net.ipv6.conf.all.accept_source_route -> r:^\s*net.ipv6.conf.all.accept_source_route\s*=\s*0'
      - 'c:sysctl net.ipv6.conf.default.accept_source_route -> r:^\s*net.ipv6.conf.default.accept_source_route\s*=\s*0'
      - 'c:grep -Rh net\.ipv6\.conf\.all\.accept_source_route /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv6.conf.all.accept_source_route\s*=\s*0'
      - 'c:grep -Rh net\.ipv6\.conf\.default\.accept_source_route /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv6.conf.default.accept_source_route\s*=\s*0'
     



# 3.2.2 Ensure ICMP redirects are not accepted (Scored)
  - id: 5528
    title: "Ensure ICMP redirects are not accepted"
    description: "ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting net.ipv4.conf.all.accept_redirects and net.ipv6.conf.all.accept_redirects to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables."
    rationale: "Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured."
    remediation: "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.accept_redirects = 0  net.ipv4.conf.default.accept_redirects = 0  net.ipv6.conf.all.accept_redirects = 0 net.ipv6.conf.default.accept_redirects = 0. Run the following commands to set the active kernel parameters: #  sysctl -w net.ipv4.conf.all.accept_redirects=0; #  sysctl -w net.ipv4.conf.default.accept_redirects=0; #  sysctl -w net.ipv6.conf.all.accept_redirects=0; #  sysctl -w net.ipv6.conf.default.accept_redirects=0; #  sysctl -w net.ipv4.route.flush=1 and #  sysctl -w net.ipv6.route.flush=1"
    compliance:
      - cis: ["3.2.2"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.conf.all.accept_redirects -> r:^\s*net.ipv4.conf.all.accept_redirects\s*=\s*0'
      - 'c:sysctl net.ipv4.conf.default.accept_redirects -> r:^\s*net.ipv4.conf.default.accept_redirects\s*=\s*0'
      - 'c:grep -Rh net\.ipv4\.conf\.all\.accept_redirects /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv4.conf.all.accept_redirects\s*=\s*0'
      - 'c:grep -Rh net\.ipv4\.conf\.default\.accept_redirects /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv4.conf.default.accept_redirects\s*=\s*0'
      - 'c:sysctl net.ipv6.conf.all.accept_redirects -> r:^\s*net.ipv6.conf.all.accept_redirects\s*=\s*0'
      - 'c:sysctl net.ipv6.conf.default.accept_redirects -> r:^\s*net.ipv6.conf.default.accept_redirects\s*=\s*0'
      - 'c:grep -Rh net\.ipv6\.conf\.all\.accept_redirects /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv6.conf.all.accept_redirects\s*=\s*0'
      - 'c:grep -Rh net\.ipv6\.conf\.default\.accept_redirects /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv6.conf.default.accept_redirects\s*=\s*0'


# 3.2.3 Ensure secure ICMP redirects are not accepted (Scored)
  - id: 5529
    title: "Ensure secure ICMP redirects are not accepted"
    description: "Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure."
    rationale: "It is still possible for even known gateways to be compromised. Setting net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table updates by possibly compromised known gateways."
    remediation: "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.secure_redirects = 0 and net.ipv4.conf.default.secure_redirects = 0. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.secure_redirects=0; # sysctl -w net.ipv4.conf.default.secure_redirects=0 and # sysctl -w net.ipv4.route.flush=1"
    compliance:
      - cis: ["3.2.3"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.conf.all.secure_redirects -> r:^\s*net.ipv4.conf.all.secure_redirects\s*=\s*0'
      - 'c:sysctl net.ipv4.conf.default.secure_redirects -> r:^\s*net.ipv4.conf.default.secure_redirects\s*=\s*0'
      - 'c:grep -Rh net\.ipv4\.conf\.all\.secure_redirects /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv4.conf.all.secure_redirects\s*=\s*0'
      - 'c:grep -Rh net\.ipv4\.conf\.default\.secure_redirects /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv4.conf.default.secure_redirects\s*=\s*0'

# 3.2.4 Ensure suspicious packets are logged (Scored)
  - id: 5530
    title: "Ensure suspicious packets are logged"
    description: "When enabled, this feature logs packets with un-routable source addresses to the kernel log."
    rationale: "Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system."
    remediation: "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.all.log_martians = 1 and net.ipv4.conf.default.log_martians = 1. Run the following commands to set the active kernel parameters: # sysctl -w net.ipv4.conf.all.log_martians=1; # sysctl -w net.ipv4.conf.default.log_martians=1 and # sysctl -w net.ipv4.route.flush=1"
    compliance:
      - cis: ["3.2.4"]
      - cis_csc: ["6.2", "6.3"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.conf.all.log_martians -> r:^\s*net.ipv4.conf.all.log_martians\s*=\s*1'
      - 'c:sysctl net.ipv4.conf.default.log_martians -> r:^\s*net.ipv4.conf.default.log_martians\s*=\s*1'
      - 'c:grep -Rh net\.ipv4\.conf\.all\.log_martians /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv4.conf.all.log_martians\s*=\s*1'
      - 'c:grep -Rh net\.ipv4\.conf\.default\.log_martians /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net\.ipv4\.conf\.default\.log_martians\s*=\s*1'

# 3.2.5 Ensure broadcast ICMP requests are ignored (Scored)
  - id: 5531
    title: "Ensure broadcast ICMP requests are ignored"
    description: "Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses."
    rationale: "Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied."
    remediation: "Run the following command to restore the default parameters and set the active kernel parameters: # grep -Els \"^\\s*net\\.ipv4\\.icmp_echo_ignore_broadcasts\\s*=\\s*0\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf \"s/^\\s*(net\\.ipv4\\.icmp_echo_ignore_broadcasts\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.icmp_echo_ignore_broadcasts=1; sysctl -w net.ipv4.route.flush=1"
    compliance:
      - cis: ["3.2.5"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.icmp_echo_ignore_broadcasts -> r:^\s*net.ipv4.icmp_echo_ignore_broadcasts\s*=\s*1'
      - 'c:grep -E -s -Rh ^\s*net\.ipv4\.icmp_echo_ignore_broadcasts\s*=\s*0 /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf -> !r:\w+' 

# 3.2.6 Ensure bogus ICMP responses are ignored (Scored)
  - id: 5532
    title: "Ensure bogus ICMP responses are ignored"
    description: "Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages."
    rationale: "Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages."
    remediation: "Run the following commands to restore the default parameters and set the active kernel parameters: # grep -Els \"^\\s*net\\.ipv4\\.icmp_ignore_bogus_error_responses\\s*=\\s*0 /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri \"s/^\\s*(net\\.ipv4\\.icmp_ignore_bogus_error_responses\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1; sysctl -w net.ipv4.route.flush=1\""
    compliance:
      - cis: ["3.2.6"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.icmp_ignore_bogus_error_responses -> r:^\s*net.ipv4.icmp_ignore_bogus_error_responses\s*=\s*1'
      - 'c:grep -E -s -Rh ^\s*net\.ipv4\.icmp_ignore_bogus_error_responses\s*=\s*0 /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf -> !r:\w+'

# 3.2.7 Ensure Reverse Path Filtering is enabled (Scored)
  - id: 5533
    title: "Ensure Reverse Path Filtering is enabled"
    description: "Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if log_martians is set)."
    rationale: "Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing."
    remediation: "Run the following command to restore the default net.ipv4.conf.all.rp_filter = 1 parameter and set the active kernel parameter: # grep -Els \"^\\s*net\\.ipv4\\.conf\\.all\\.rp_filter\\s*=\\s*0\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri \"s/^\\s*(net\\.ipv4\\.net.ipv4.conf\\.all\\.rp_filter\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.ipv4.conf.all.rp_filter=1; sysctl -w net.ipv4.route.flush=1 .Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv4.conf.default.rp_filter=1 and Run the following commands to set the active kernel parameter: # sysctl -w net.ipv4.conf.default.rp_filter=1 and # sysctl -w net.ipv4.route.flush=1"
    compliance:
      - cis: ["3.2.7"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.conf.all.rp_filter -> r:^\s*net.ipv4.conf.all.rp_filter\s*=\s*1'
      - 'c:sysctl net.ipv4.conf.default.rp_filter -> r:^\s*net.ipv4.conf.default.rp_filter\s*=\s*1'
      - 'c:grep -E -s -Rh ^\s*net\.ipv4\.conf\.all\.rp_filter\s*=\s*0 /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf -> !r:\w+'
      - 'c:grep -E -s -Rh ^\s*net\.ipv4\.conf\.default\.rp_filter\s*=\s*1 /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf -> r:^\s*net.ipv4.conf.default.rp_filter\s*=\s*1'

# 3.2.8 Ensure TCP SYN Cookies is enabled (Scored)
  - id: 5534
    title: "Ensure TCP SYN Cookies is enabled"
    description: "When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue."
    rationale: "Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack."
    remediation: "Run the following command to restore the default parameter and set the active kernel parameters: grep -Els \"^\\s*net\\.ipv4\\.tcp_syncookies\\s*=\\s*[02]*\" /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf | while read filename; do sed -ri \"s/^\\s*(net\\.ipv4\\.tcp_syncookies\\s*)(=)(\\s*\\S+\\b).*$/# *REMOVED* \\1/\" $filename; done; sysctl -w net.ipv4.tcp_syncookies=1; sysctl -w net.ipv4.route.flush=1"
    compliance:
      - cis: ["3.2.8"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.tcp_syncookies -> r:^\s*net.ipv4.tcp_syncookies\s*=\s*1'
      - 'c:grep -E -r -Rh ^\s*net\.ipv4\.tcp_syncookies\s*=\s*[02] /etc/sysctl.conf /etc/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /run/sysctl.d/*.conf -> !r:\w+'

# 3.2.9 Ensure IPv6 router advertisements are not accepted (Scored)
  - id: 5535
    title: "Ensure IPv6 router advertisements are not accepted"
    description: "This setting disables the system's ability to accept IPv6 router advertisements."
    rationale: "It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes."
    remediation: "Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file: net.ipv6.conf.all.accept_ra = 0 and net.ipv6.conf.default.accept_ra = 0 . Run the following commands to set the active kernel parameters: # sysctl -w net.ipv6.conf.all.accept_ra=0; # sysctl -w net.ipv6.conf.default.accept_ra=0 and # sysctl -w net.ipv6.route.flush=1;"
    compliance:
      - cis: ["3.2.9"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv6.conf.all.accept_ra -> r:^\s*net.ipv6.conf.all.accept_ra\s*=\s*0'
      - 'c:sysctl net.ipv6.conf.default.accept_ra -> r:^\s*net.ipv6.conf.default.accept_ra\s*=\s*0'
      - 'c:grep -Rh net\.ipv6\.conf\.all\.accept_ra /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv6.conf.all.accept_ra\s*=\s*0'
      - 'c:grep -Rh net\.ipv6\.conf\.default\.accept_ra /etc/sysctl.conf /etc/sysctl.d/* -> r:^\s*net.ipv6.conf.default.accept_ra\s*=\s*0'

###############################################
# 3.3 Uncommon Network Protocols
###############################################
# 3.3.1 Ensure DCCP is disabled (Scored)
  - id: 5536
    title: "Ensure DCCP is disabled"
    description: "The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that supports streaming media and telephony. DCCP provides a way to gain access to congestion control, without having to do it at the application layer, but does not provide in-sequence delivery"
    rationale: "If the protocol is not required, it is recommended that the drivers not be installed to reduce the potential attack surface."
    remediation: "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf. Example: vim /etc/modprobe.d/dccp.conf and add the following line: install dccp /bin/true"
    compliance:
      - cis: ["3.3.1"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'c:modprobe -n -v dccp -> r:^\s*install\s*/bin/true'
      - 'not c:lsmod -> r:dccp'

# 3.3.2 Ensure SCTP is disabled (Scored)
  - id: 5537
    title: "Ensure SCTP is disabled"
    description: "The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to support message oriented communication, with several streams of messages in one connection. It serves a similar function as TCP and UDP, incorporating features of both. It is message-oriented like UDP, and ensures reliable in-sequence transport of messages with congestion control like TCP."
    rationale: "If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface."
    remediation: "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf .Example: vim /etc/modprobe.d/sctp.conf and add the following line: install sctp /bin/true"
    compliance:
      - cis: ["3.3.2"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'c:modprobe -n -v sctp -> r:^\s*install\s*/bin/true'
      - 'not c:lsmod -> r:sctp'

# 3.3.3 Ensure RDS is disabled (Scored)
  - id: 5538
    title: "Ensure RDS is disabled"
    description: "The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to provide low-latency, high-bandwidth communications between cluster nodes. It was developed by the Oracle Corporation."
    rationale: "If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface."
    remediation: "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf .Example: vim /etc/modprobe.d/rds.conf and add the following line: install rds /bin/true"
    compliance:
      - cis: ["3.3.3"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'c:modprobe -n -v rds -> r:^\s*install\s*/bin/true'
      - 'not c:lsmod -> r:rds'


# 3.3.4 Ensure TIPC is disabled (Scored)
  - id: 5539
    title: "Ensure TIPC is disabled"
    description: "The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes."
    rationale: "If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface."
    remediation: "Edit or create a file in the /etc/modprobe.d/ directory ending in .conf .Example: vim /etc/modprobe.d/tipc.conf and add the following line: install tipc /bin/true"
    compliance:
      - cis: ["3.3.4"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'c:modprobe -n -v tipc -> r:^\s*install\s*/bin/true'
      - 'not c:lsmod -> r:tipc'

###############################################
# 3.4 Firewall Configuration
###############################################
###############################################
# 3.4.1 Ensure Firewall software is installed
###############################################
# 3.4.1.1 Ensure a Firewall package is installed (Scored)
  - id: 5540
    title: "Ensure a Firewall package is installed"
    description: "A Firewall package should be selected. Most firewall configuration utilities operate as a front end to nftables or iptables."
    rationale: "A Firewall package is required for firewall management and configuration."
    remediation: "Run one of the following commands to install a Firewall package. For firewalld: dnf install firewalld .For nftables: # dnf install nftables. For iptables: # dnf install iptables"
    compliance:
      - cis: ["3.4.1.1"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:rpm -q firewalld -> r:^firewalld-'
      - 'c:rpm -q nftables -> r:^nftables-'
      - 'c:rpm -q iptables -> r:^iptables-'

###############################################
# 3.4.2 Configure firewalld
###############################################

# 3.4.2.1 Ensure firewalld service is enabled and running (Scored)
  - id: 5541
    title: "Ensure firewalld service is enabled and running"
    description: "Ensure that the firewalld service is enabled to protect your system"
    rationale: "firewalld (Dynamic Firewall Manager) tool provides a dynamically managed firewall. The tool enables network/firewall zones to define the trust level of network connections and/or interfaces. It has support both for IPv4 and IPv6 firewall settings. Also, it supports Ethernet bridges and allow you to separate between runtime and permanent configuration options. Finally, it supports an interface for services or applications to add firewall rules directly"
    remediation: "Run the following command to enable and start firewalld: # systemctl --now enable firewalld"
    compliance:
      - cis: ["3.4.2.1"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:systemctl is-enabled firewalld -> r:^enabled'
      - 'c:firewall-cmd --state -> r:^running'

# 3.4.2.2 Ensure iptables is not enabled (Scored)
  - id: 5542
    title: "Ensure iptables is not enabled"
    description: "IPtables is an application that allows a system administrator to configure the IPv4 and IPv6 tables, chains and rules provided by the Linux kernel firewall. IPtables is installed as a dependency with firewalld."
    rationale: "Running firewalld and IPtables concurrently may lead to conflict, therefore IPtables should be stopped and masked when using firewalld."
    remediation: "Run the following command to stop and mask iptables: systemctl --now mask iptables"
    compliance:
      - cis: ["3.4.2.2"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:systemctl status iptables -> r:Loaded:\s*disabled|Loaded:\s*masked'
      - 'c:systemctl status iptables -> r:Active: inactive (dead)'
      - 'c:systemctl is-enabled iptables -> r:disabled|masked'

# 3.4.2.3 Ensure nftables is not enabled (Scored)
  - id: 5543
    title: "Ensure nftables is not enabled"
    description: "nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables. nftables are installed as a dependency with firewalld."
    rationale: "Running firewalld and nftables concurrently may lead to conflict, therefore nftables should be stopped and masked when using firewalld."
    remediation: "Run the following command to mask and stop nftables: systemctl --now mask nftables"
    compliance:
      - cis: ["3.4.2.3"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:systemctl status iptables -> r:Loaded:\s*disabled | r:Loaded:\s*masked'
      - 'c:systemctl status iptables -> r:Active: inactive (dead)'
      - 'c:systemctl is-enabled iptables -> r:disabled | r:masked'

###############################################
# 3.4.3 Configure nftables
###############################################

# 3.4.3.1 Ensure iptables are flushed (Not Scored)
  - id: 5544
    title: "Ensure iptables are flushed"
    description: "nftables is a replacement for iptables, ip6tables, ebtables and arptables"
    rationale: "It is possible to mix iptables and nftables. However, this increases complexity and also the chance to introduce errors. For simplicity flush out all iptables rules, and ensure it is not loaded."
    remediation: "Run the following commands to flush iptables: For iptables: # iptables -F and For ip6tables: # ip6tables -F"
    compliance:
      - cis: ["3.4.3.1"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:iptables -L -> !r:^\s*Chain && !r:^\s*target'
      - 'c:ip6tables -L -> !r:^\s*Chain && !r:^\s*target'

# 3.4.3.2 Ensure a table exists (Scored)
  - id: 5545
    title: "Ensure a table exists"
    description: "Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families."
    rationale: "nftables doesn't have any default tables. Without a table being build, nftables will not filter network traffic."
    remediation: "Run the following command to create a table in nftables: # nft create table inet <table name> .Example: # nft create table inet filter"
    compliance:
      - cis: ["3.4.3.2"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:nft list tables -> r:\w+'


# 3.4.3.3 Ensure base chains exist (Scored)
  - id: 5546
    title: "Ensure base chains exist"
    description: "Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization."
    rationale: "If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables."
    remediation: "Run the following command to create the base chains: # nft create chain inet <table name> <base chain name> { type filter hook <(input|forward|output)> priority 0 \\; } . Example: # nft create chain inet filter input { type filter hook input priority 0 \\; } # nft create chain inet filter forward { type filter hook forward priority 0\\; } # nft create chain inet filter output { type filter hook output priority 0 \\; }"
    compliance:
      - cis: ["3.4.3.3"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:nft list ruleset -> r:hook input'
      - 'c:nft list ruleset -> r:hook forward'
      - 'c:nft list ruleset -> r:hook output'

# 3.4.3.6 Ensure default deny firewall policy (Scored)
  - id: 5550
    title: "Ensure default deny firewall policy"
    description: "Base chain policy is the default verdict that will be applied to packets reaching the end of the chain."
    rationale: "There are two policies: accept (Default) and drop. If the policy is set to accept , the firewall will accept any packet that is not configured to be denied and the packet will continue transversing the network stack. It is easier to white list acceptable usage than to black list unacceptable usage."
    remediation: "Run the following command for the base chains with the input, forward, and output hooks to implement a default DROP policy: # nft chain <table family> <table name> <chain name> { policy drop \\; } . Example: # nft chain inet filter input { policy drop \\; } ; # nft chain inet filter forward { policy drop \\; } and # nft chain inet filter output { policy drop \\; }"
    compliance:
      - cis: ["3.4.3.6"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:nft list ruleset -> r:hook input && r:policy drop'
      - 'c:nft list ruleset -> r:hook forward && r:policy drop'
      - 'c:nft list ruleset -> r:hook output && r:policy drop'

# 3.4.3.7 Ensure nftables service is enabled (Scored)
  - id: 5551
    title: "Ensure nftables service is enabled"
    description: "The nftables service allows for the loading of nftables rulesets during boot, or starting of the nftables service."
    rationale: "The nftables service restores the nftables rules from the rules files referenced in the /etc/sysconfig/nftables.conf file durring boot or the starting of the nftables service."
    remediation: "Run the following command to enable the nftables service: # systemctl --now enable nftables"
    compliance:
      - cis: ["3.4.3.7"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:systemctl is-enabled nftables -> r:^enabled'

###############################################
# 3.4.4 Configure iptables
###############################################
###############################################
# 3.4.4.1 Configure IPv4 iptables
###############################################
# 3.4.4.1.1 Ensure default deny firewall policy (Scored)
  - id: 5552
    title: "Configure IPv4 iptables"
    description: "A default deny all policy on connections ensures that any unconfigured network usage will be rejected."
    rationale: "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
    remediation: "Run the following commands to implement a default DROP policy: # iptables -P INPUT DROP; # iptables -P OUTPUT DROP; # iptables -P FORWARD DROP"
    compliance:
      - cis: ["3.4.4.1.1"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:iptables -L -> r:Chain INPUT \(policy DROP\)'
      - 'c:iptables -L -> r:Chain FORWARD \(policy DROP\)'
      - 'c:iptables -L -> r:Chain OUTPUT \(policy DROP\)'

# 3.4.4.1.2 Ensure loopback traffic is configured (Scored)
  - id: 5553
    title: "Ensure loopback traffic is configured"
    description: "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (127.0.0.0/8)."
    rationale: "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
    remediation: "Run the following commands to implement the loopback rules: # iptables -A INPUT -i lo -j ACCEPT # iptables -A OUTPUT -o lo -j ACCEPT # iptables -A INPUT -s 127.0.0.0/8 -j DROP"
    compliance:
      - cis: ["3.4.4.1.2"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:iptables -L INPUT -v -n -> r:\.*ACCEPT\.*all\.*lo\.**\.*0.0.0.0/0\.*0.0.0.0/0'
      - 'c:iptables -L INPUT -v -n -> r:\.*DROP\.*all\.**\.**\.*127.0.0.0/8\.*0.0.0.0/0'
      - 'c:iptables -L OUTPUT -v -n -> r:\.*ACCEPT\.*all\.**\.*lo\.*0.0.0.0/0\.*0.0.0.0/0'

###############################################
# 3.4.4.2 Configure IPv6 ip6tables
###############################################
# 3.4.4.2.1 Ensure IPv6 default deny firewall policy (Scored)
  - id: 5554
    title: "Ensure IPv6 default deny firewall policy"
    description: "A default deny all policy on connections ensures that any unconfigured network usage will be rejected."
    rationale: "With a default accept policy the firewall will accept any packet that is not configured to be denied. It is easier to white list acceptable usage than to black list unacceptable usage."
    remediation: "Run the following commands to implement a default DROP policy: # ip6tables -P INPUT DROP; # ip6tables -P OUTPUT DROP; # ip6tables -P FORWARD DROP"
    compliance:
      - cis: ["3.4.4.2.1"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:ip6tables -L -> r:Chain INPUT \(policy DROP\)'
      - 'c:ip6tables -L -> r:Chain FORWARD \(policy DROP\)'
      - 'c:ip6tables -L -> r:Chain OUTPUT \(policy DROP\)'

# 3.4.4.2.2 Ensure IPv6 loopback traffic is configured (Scored)
  - id: 5555
    title: "Ensure loopback traffic is configured"
    description: "Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network (::1)."
    rationale: "Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network (::1) traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure."
    remediation: "Run the following commands to implement the loopback rules: # ip6tables -A INPUT -i lo -j ACCEPT # ip6tables -A OUTPUT -o lo -j ACCEPT # ip6tables -A INPUT -s 127.0.0.0/8 -j DROP"
    compliance:
      - cis: ["3.4.4.2.2"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:ip6tables -L INPUT -v -n -> r:\.*ACCEPT\.*all\.*lo\.**\.*::/0\.*::/0'
      - 'c:ip6tables -L INPUT -v -n -> r:\.*DROP\.*all\.**\.**\.*::1\.*::/0'
      - 'c:ip6tables -L OUTPUT -v -n -> r:\.*ACCEPT\.*all\.**\.*lo\.*::/0\.*::/0'

# 3.5 Ensure wireless interfaces are disabled (Scored)  
  - id: 5556
    title: "Ensure wireless interfaces are disabled"
    description: "Wireless networking is used when wired networks are unavailable. Red Hat Enterprise Linux contains a wireless tool kit to allow system administrators to configure and use wireless networks."
    rationale: "If wireless is not to be used, wireless devices can be disabled to reduce the potential attack surface."
    remediation: "Run the following command to disable any wireless interfaces: # nmcli radio all off . Disable any wireless interfaces in your network configuration."
    compliance:
      - cis: ["3.5"]
      - cis_csc: ["15.4", "15.5"]
    references:
      - nmcli(1) - Linux man page
    condition: all
    rules:
      - 'c:nmcli radio wifi -> r:^disabled'

# 3.6 Disable IPv6 (Not Scored)
  - id: 5557
    title: "Disable IPv6"
    description: "Although IPv6 has many advantages over IPv4, not all organizations have IPv6 or dual stack configurations implemented."
    rationale: "If IPv6 or dual stack is not to be used, it is recommended that IPv6 be disabled to reduce the attack surface of the system."
    remediation: "Edit /etc/default/grub and add ipv6.disable=1 to the GRUB_CMDLINE_LINUX parameters: GRUB_CMDLINE_LINUX=\"ipv6.disable=1\" .Run the following command to update the grub2 configuration: # grub2-mkconfig -o /boot/grub2/grub.cfg"
    compliance:
      - cis: ["3.6"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'f:/boot/grub2/grubenv -> r:^\s*kernelopts=(\S+\s+)*ipv6\.disable=1\b\s*(\S+\s*)*$'

###############################################
# 5 Access, Authentication and Authorization
###############################################
###############################################
# 5.1 Configure cron
###############################################
# 5.1.1 Ensure cron daemon is enabled (Scored)
  - id: 5558
    title: "Ensure cron daemon is enabled"
    description: "The cron daemon is used to execute batch jobs on the system."
    rationale: "While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and cron is used to execute them."
    remediation: "Run the following command to enable cron : # systemctl --now enable crond"
    compliance:
      - cis: ["5.1.1"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:systemctl is-enabled crond -> r:^enabled'

# 5.1.2 Ensure permissions on /etc/crontab are configured (Scored)
  - id: 5659
    title: "Ensure permissions on /etc/crontab are configured"
    description: "The /etc/crontab file is used by cron to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file."
    rationale: "This file contains information on what system jobs are run by cron. Write access to these files could provide unprivileged users with the ability to elevate their privileges. Read access to these files could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access."
    remediation: "Run the following commands to set ownership and permissions on /etc/crontab : chown root:root /etc/crontab and chmod og-rwx /etc/crontab"
    compliance:
      - cis: ["5.1.2"]
      - cis_csc: ["5.1"]
      - pci_dss: ["2.2.4"]
      - hipaa: ["164.312.b"]
      - nist_800_53: ["AU.14", "AC.7"]
      - gpg_13: ["7.8"]
      - gdpr_IV: ["35.7","32.2"]
    condition: all
    rules:
      - 'c:stat /etc/crontab -> r:^Access: \(0600/-rw-------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'


# 5.1.3 Ensure permissions on /etc/cron.hourly are configured (Scored)
  - id: 5660 
    title: "Ensure permissions on /etc/cron.hourly are configured"
    description: "This directory contains system cron jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory."
    rationale: "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
    remediation: "Run the following commands to set ownership and permissions on /etc/cron.hourly : chown root:root /etc/cron.hourly and chmod og-rwx /etc/cron.hourly"
    compliance:
      - cis: ["5.1.3"]
      - cis_csc: ["5.1"]
      - pci_dss: ["2.2.4"]
      - nist_800_53: ["CM.1"]

    condition: all
    rules:
      - 'c:stat /etc/cron.hourly -> r:^Access: \(0700/drwx------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'

# 5.1.4 Ensure permissions on /etc/cron.daily are configured (Scored)
  - id: 5661 
    title: "Ensure permissions on /etc/cron.daily are configured"
    description: "The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory."
    rationale: "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
    remediation: "Run the following commands to set ownership and permissions on /etc/cron.daily : chown root:root /etc/cron.daily and chmod og-rwx /etc/cron.daily"
    compliance:
      - cis: ["5.1.4"]
      - cis_csc: ["5.1"]
      - pci_dss: ["2.2.4"]
      - nist_800_53: ["CM.1"]
    condition: all
    rules:
      - 'c:stat /etc/cron.daily -> r:^Access: \(0700/drwx------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'

# 5.1.5 Ensure permissions on /etc/cron.weekly are configured (Scored)
  - id: 5662 
    title: "Ensure permissions on /etc/cron.weekly are configured"
    description: "The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory."
    rationale: "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
    remediation: "Run the following commands to set ownership and permissions on /etc/cron.weekly : chown root:root /etc/cron.weekly and chmod og-rwx /etc/cron.weekly"
    compliance:
      - cis: ["5.1.5"]
      - cis_csc: ["5.1"]
      - pci_dss: ["2.2.4"]
      - nist_800_53: ["CM.1"]
    condition: all
    rules:
      - 'c:stat /etc/cron.weekly -> r:^Access: \(0700/drwx------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'


# 5.1.6 Ensure permissions on /etc/cron.monthly are configured (Scored)
  - id: 5663 
    title: "Ensure permissions on /etc/cron.monthly are configured"
    description: "The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the crontab command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory."
    rationale: "Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls."
    remediation: "Run the following commands to set ownership and permissions on /etc/cron.monthly : chown root:root /etc/cron.monthly and chmod og-rwx /etc/cron.monthly"
    compliance:
      - cis: ["5.1.6"]
      - cis_csc: ["5.1"]
      - pci_dss: ["2.2.4"]
      - nist_800_53: ["CM.1"]
    condition: all
    rules:
      - 'c:stat /etc/cron.monthly -> r:^Access: \(0700/drwx------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'

# 5.1.7 Ensure permissions on /etc/cron.d are configured (Scored)
  - id: 5764
    title: "Ensure permissions on /etc/cron.d are configured"
    description: "Configure /etc/cron.allow and /etc/at.allow to allow specific users to use these services. If /etc/cron.allow or /etc/at.allow do not exist, then /etc/at.deny and /etc/cron.deny are checked. Any user not specifically defined in those files is allowed to use at and cron. By removing the files, only users in /etc/cron.allow and /etc/at.allow are allowed to use at and cron. Note that even though a given user is not listed in cron.allow , cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs."
    rationale: "On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
    remediation: "Run the following commands to remove /etc/cron.deny and /etc/at.deny and create and set permissions and ownership for /etc/cron.allow and /etc/at.allow: rm /etc/cron.deny;rm /etc/at.deny;touch /etc/cron.allow; touch /etc/at.allow; chmod og-rwx /etc/cron.allow; chmod og-rwx /etc/at.allow; chown root:root /etc/cron.allow and chown root:root /etc/at.allow"
    compliance:
      - cis: ["5.1.7"]
      - cis_csc: ["5.1"]
      - pci_dss: ["2.2.4"]
      - nist_800_53: ["CM.1"]
    condition: all
    rules:
      - 'c:stat /etc/cron.d -> r:^Access: \(0700/drwx------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'

# 5.1.8 Ensure at/cron is restricted to authorized users (Scored)
  - id: 5665 
    title: "Ensure at/cron is restricted to authorized users"
    description: "Configure /etc/cron.allow and /etc/at.allow to allow specific users to use these services. If /etc/cron.allow or /etc/at.allow do not exist, then /etc/at.deny and /etc/cron.deny are checked. Any user not specifically defined in those files is allowed to use at and cron. By removing the files, only users in /etc/cron.allow and /etc/at.allow are allowed to use at and cron. Note that even though a given user is not listed in cron.allow , cron jobs can still be run as that user. The cron.allow file only controls administrative access to the crontab command for scheduling and modifying cron jobs."
    rationale: "On many systems, only the system administrator is authorized to schedule cron jobs. Using the cron.allow file to control who can run cron jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files."
    remediation: "Run the following commands to remove /etc/cron.deny and /etc/at.deny and create and set permissions and ownership for /etc/cron.allow and /etc/at.allow: rm /etc/cron.deny;rm /etc/at.deny;touch /etc/cron.allow; touch /etc/at.allow; chmod og-rwx /etc/cron.allow; chmod og-rwx /etc/at.allow; chown root:root /etc/cron.allow and chown root:root /etc/at.allow"
    compliance:
      - cis: ["5.1.8"]
      - cis_csc: ["16"]
      - pci_dss: ["2.2.4"]
      - nist_800_53: ["CM.1"]
    condition: all
    rules:
      - 'c:stat /etc/cron.deny -> r:No such file or directory$'
      - 'c:stat /etc/at.deny -> r:No such file or directory$'
      - 'c:stat /etc/cron.allow -> r:^Access: \(0600/-rw-------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'
      - 'c:stat /etc/at.allow -> r:^Access: \(0600/-rw-------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'

###############################################
# 5.2 Configure SSH
###############################################
# 5.2.1 Ensure permissions on /etc/ssh/sshd_config are configured (Scored)
  - id: 5666 
    title: "Ensure permissions on /etc/ssh/sshd_config are configured"
    description: "The /etc/ssh/sshd_config file contains configuration specifications for sshd. The command below sets the owner and group of the file to root."
    rationale: "The /etc/ssh/sshd_config file needs to be protected from unauthorized changes by non-privileged users."
    remediation: "Run the following commands to set ownership and permissions on /etc/ssh/sshd_config: chown root:root /etc/ssh/sshd_config and chmod og-rwx /etc/ssh/sshd_config"
    compliance:
      - cis: ["5.2.1"]
      - cis_csc: ["5.1"]
      - pci_dss: ["2.2.4"]
      - nist_800_53: ["CM.1"]
    condition: all
    rules:
      - 'c:stat /etc/ssh/sshd_config -> r:^Access: \(0600/-rw-------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'

# 5.2.2 Ensure SSH access is limited (Scored)
  - id: 5667 
    title: "Ensure SSH access is limited"
    description: "There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged: AllowUsers The AllowUsers variable gives the system administrator the option of allowing specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host. AllowGroups The AllowGroups variable gives the system administrator the option of allowing specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable. DenyUsers The DenyUsers variable gives the system administrator the option of denying specific users to ssh into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host. DenyGroups The DenyGroups variable gives the system administrator the option of denying specific groups of users to ssh into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable."
    rationale: "Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system."
    remediation: "Edit the /etc/ssh/sshd_config file to set one or more of the parameter as follows: AllowUsers <userlist>; AllowGroups <grouplist>; DenyUsers <userlist> and DenyGroups <grouplist>"
    compliance:
      - cis: ["5.2.2"]
      - cis_csc: ["4.3"]
      - pci_dss: ["8.1"]
    condition: any
    rules:
      - 'f:/etc/ssh/sshd_config -> r:^\s*AllowUsers'
      - 'f:/etc/ssh/sshd_config -> r:^\s*AllowGroups'
      - 'f:/etc/ssh/sshd_config -> r:^\s*DenyUsers'
      - 'f:/etc/ssh/sshd_config -> r:^\s*DenyGroups'

# 5.2.3 Ensure permissions on SSH private host key files are configured (Scored)
  - id: 5568
    title: "Ensure permissions on SSH private host key files are configured"
    description: "An SSH private key is one of two files used in SSH public key authentication. In this authentication method, The possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed."
    rationale: "If an unauthorized user obtains the private SSH host key file, the host could be impersonated"
    remediation: "Run the following commands to set ownership and permissions on the private SSH host key files: # find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chown root:root {} \\; # find /etc/ssh -xdev -type f -name 'ssh_host_*_key' -exec chmod 0600 {} \\;"
    compliance:
      - cis: ["5.2.3"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:stat /etc/ssh/ssh_host_rsa_key -> r:^Access: \(0600/-rw-------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'
      - 'c:stat /etc/ssh/ssh_host_ecdsa_key -> r:^Access: \(0600/-rw-------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'
      - 'c:stat /etc/ssh/ssh_host_ed25519_key -> r:^Access: \(0600/-rw-------\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'

# 5.2.4 Ensure permissions on SSH public host key files are configured (Scored)
  - id: 5569
    title: "Ensure permissions on SSH public host key files are configured"
    description: "An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully."
    rationale: "If a public host key file is modified by an unauthorized user, the SSH service may be compromised."
    remediation: "Run the following commands to set permissions and ownership on the SSH host public key files: # find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chmod 0644 {} \\; #find /etc/ssh -xdev -type f -name 'ssh_host_*_key.pub' -exec chown root:root {} \\;"
    compliance:
      - cis: ["5.2.4"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:stat /etc/ssh/ssh_host_rsa_key.pub -> r:^Access: \(0644/-rw-r--r--\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'
      - 'c:stat /etc/ssh/ssh_host_ecdsa_key.pub -> r:^Access: \(0644/-rw-r--r--\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'
      - 'c:stat /etc/ssh/ssh_host_ed25519_key.pub -> r:^Access: \(0644/-rw-r--r--\)  Uid: \(    0/    root\)   Gid: \(    0/    root\)$'

# 5.2.5 Ensure SSH LogLevel is appropriate (Scored)
  - id: 5570
    title: "Ensure SSH LogLevel is appropriate"
    description: "INFO level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field. VERBOSE level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments."
    rationale: "SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically not recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: LogLevel VERBOSE or LogLevel INFO"
    compliance:
      - cis: ["5.2.5"]
      - cis_csc: ["6.2", "6.3"]
    references:
      - https://www.ssh.com/ssh/sshd_config/
    condition: all
    rules:
      - 'c:sshd -T -> r:^\s*LogLevel\s+VERBOSE|^\s*loglevel\s+INFO'

# 5.2.6 Ensure SSH X11 forwarding is disabled (Scored)
  - id: 5671
    title: "Ensure SSH X11 forwarding is disabled"
    description: "The X11Forwarding parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections."
    rationale: "Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: X11Forwarding no"
    compliance:
      - cis: ["5.2.6"]
      - cis_csc: ["9.2"] 
      - pci_dss: ["2.2.3"]
      - nist_800_53: ["CM.1"]
      - gpg_13: ["4.3"]
      - gdpr_IV: ["35.7.d"]
      - hipaa: ["164.312.b"]
    condition: all
    rules:
      - 'c:sshd -T -> r:^\s*X11Forwarding\s*\t*no'

# 5.2.7 Ensure SSH MaxAuthTries is set to 4 or less (Scored)
  - id: 5672 
    title: "Ensure SSH MaxAuthTries is set to 4 or less"
    description: "The MaxAuthTries parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the syslog file detailing the login failure."
    rationale: "Setting the MaxAuthTries parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: MaxAuthTries 4"
    compliance:
      - cis: ["5.2.7"]
      - cis_csc: ["16.13"]
      - pci_dss: ["2.2.4"]
      - nist_800_53: ["CM.1"]
    condition: all
    rules:
      - 'c:sshd -T -> !r:^# && n:^MaxAuthTries\s*\t*(\d+) compare <= 4'

# 5.2.8 Ensure SSH IgnoreRhosts is enabled (Scored)
  - id: 5673 
    title: "Ensure SSH IgnoreRhosts is enabled"
    description: "The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication."
    rationale: "Setting this parameter forces users to enter a password when authenticating with ssh."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: Ignorerhosts yes"
    compliance:
      - cis: ["5.2.8"]
      - cis_csc: ["9.2"]
      - pci_dss: ["4.1"]
      - hipaa: ["164.312.a.2.IV", "164.312.e.1", "164.312.e.2.I", "164.312.e.2.II"]
      - nist_800_53: ["SC.8"]
    condition: all
    rules:
      - 'c:sshd -T -> !r:^# && r:ignorerhosts\s*\t*yes'

# 5.2.9 Ensure SSH HostbasedAuthentication is disabled (Scored)
  - id: 5674 
    title: "Ensure SSH HostbasedAuthentication is disabled"
    description: "The HostbasedAuthentication parameter specifies if authentication is allowed through trusted hosts via the user of .rhosts , or /etc/hosts.equiv, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2."
    rationale: "Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf, disabling the ability to use .rhosts files in SSH provides an additional layer of protection."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: HostbasedAuthentication no"
    compliance:
      - cis: ["5.2.9"]
      - cis_csc: ["16.3"]
      - pci_dss: ["4.1"]
      - hipaa: ["164.312.a.2.IV", "164.312.e.1", "164.312.e.2.I", "164.312.e.2.II"]
      - nist_800_53: ["SC.8"]
    condition: all
    rules:
      - 'c:sshd -T -> !r:^# && r:HostbasedAuthentication\s*\t*no'

# 5.2.10 Ensure SSH root login is disabled (Scored)
  - id: 5675 
    title: "Ensure SSH root login is disabled"
    description: "The PermitRootLogin parameter specifies if the root user can log in using ssh. The default is no."
    rationale: "Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root via sudo or su . This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitRootLogin no"
    compliance:
      - cis: ["5.2.10"]
      - cis_csc: ["4.3"]
      - pci_dss: ["4.1"]
      - hipaa: ["164.312.a.2.IV", "164.312.e.1", "164.312.e.2.I", "164.312.e.2.II"]
      - nist_800_53: ["SC.8"]
    condition: all
    rules:
      - 'c:sshd -T -> !r:^# && r:PermitRootLogin\s*\t*no'

# 5.2.11 Ensure SSH PermitEmptyPasswords is disabled (Scored)
  - id: 5676 
    title: "Ensure SSH PermitEmptyPasswords is disabled"
    description: "The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts with empty password strings."
    rationale: "Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitEmptyPasswords no"
    compliance:
      - cis: ["5.2.11"]
      - cis_csc: ["16.3"]
      - pci_dss: ["4.1"]
      - hipaa: ["164.312.a.2.IV", "164.312.e.1", "164.312.e.2.I", "164.312.e.2.II"]
      - nist_800_53: ["SC.8"]
    condition: all
    rules:
      - 'c:sshd -T -> !r:^# && r:PermitEmptyPasswords\s*\t*no'

# 5.2.12 Ensure SSH PermitUserEnvironment is disabled (Scored)
  - id: 5677 
    title: "Ensure SSH PermitUserEnvironment is disabled"
    description: "The PermitUserEnvironment option allows users to present environment options to the ssh daemon."
    rationale: "Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has ssh executing trojan'd programs)"
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: PermitUserEnvironment no"
    compliance:
      - cis: ["5.2.12"]
      - cis_csc: ["5.1"]
      - pci_dss: ["4.1"]
      - hipaa: ["164.312.a.2.IV", "164.312.e.1", "164.312.e.2.I", "164.312.e.2.II"]
      - nist_800_53: ["SC.8"]
    condition: all
    rules:
      - 'c:sshd -T -> r:^\s*PermitUserEnvironment\s*\t*no'

# 5.2.13 Ensure SSH Idle Timeout Interval is configured (Scored)
  - id: 5678 
    title: "Ensure SSH Idle Timeout Interval is configured"
    description: "The two options ClientAliveInterval and ClientAliveCountMax control the timeout of ssh sessions. When the ClientAliveInterval variable is set, ssh sessions that have no activity for the specified length of time are terminated. When the ClientAliveCountMax variable is set, sshd will send client alive messages at every ClientAliveInterval interval. When the number of consecutive client alive messages are sent with no response from the client, the ssh session is terminated. For example, if the ClientAliveInterval is set to 15 seconds and the ClientAliveCountMax is set to 3, the client ssh session will be terminated after 45 seconds of idle time."
    rationale: "Having no timeout value associated with a connection could allow an unauthorized user access to another user's ssh session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening. While the recommended setting is 300 seconds (5 minutes), set this timeout value based on site policy. The recommended setting for ClientAliveCountMax is 0. In this case, the client session will be terminated after 5 minutes of idle time and no keepalive messages will be sent."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameters according to site policy: ClientAliveInterval 300 and ClientAliveCountMax 0"
    compliance:
      - cis: ["5.2.13"]
      - cis_csc: ["16.11"]
      - pci_dss: ["12.3.8"]
    condition: all
    rules:
      - 'c:sshd -T -> n:^\s*ClientAliveInterval\s*\t*(\d+) compare <= 300'
      - 'c:sshd -T -> n:^\s*ClientAliveCountMax\s*\t*(\d+) compare <= 3'

# 5.2.14 Ensure SSH LoginGraceTime is set to one minute or less (Scored)
  - id: 5679 
    title: "Ensure SSH LoginGraceTime is set to one minute or less"
    description: "The LoginGraceTime parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access."
    rationale: "Setting the LoginGraceTime parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: LoginGraceTime 60"
    compliance:
      - cis: ["5.2.14"]
      - cis_csc: ["5.1"]
      - pci_dss: ["8.1"]
    condition: all
    rules:
      - 'c:sshd -T -> n:^\s*LoginGraceTime\s*\t*(\d+) compare <= 60'

# 5.2.15 Ensure SSH warning banner is configured (Scored)
  - id: 5680 
    title: "Ensure SSH warning banner is configured"
    description: "The Banner parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed."
    rationale: "Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: Banner /etc/issue.net"
    compliance:
      - cis: ["5.2.15"]
      - cis_csc: ["5.1"]
      - pci_dss: ["2.2.4"]
      - nist_800_53: ["CM.1"]
    condition: all
    rules:
      - 'c:sshd -T -> r:^\s*Banner\s*\t*/etc/issue.net'

# 5.2.16 Ensure SSH PAM is enabled (Scored)
  - id: 5581
    title: "Ensure SSH PAM is enabled"
    description: "UsePAM Enables the Pluggable Authentication Module interface. If set to “yes” this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for all authentication types."
    rationale: "When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: UsePAM yes"
    compliance:
      - cis: ["5.2.16"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sshd -T -> r:^\s*usepam\s+yes'

# 5.2.17 Ensure SSH AllowTcpForwarding is disabled (Scored)
  - id: 5582
    title: "Ensure SSH AllowTcpForwarding is disabled"
    description: "SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines."
    rationale: "Leaving port forwarding enabled can expose the organization to security risks and back-doors. SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: AllowTcpForwarding no"
    compliance:
      - cis: ["5.2.17"]
      - cis_csc: ["9.2"]
    references:
      - https://www.ssh.com/ssh/tunneling/example
    condition: all
    rules:
      - 'c:sshd -T -> r:^\s*AllowTcpForwarding\s+no'
      
# 5.2.19 Ensure SSH MaxSessions is set to 4 or less (Scored)
  - id: 5583
    title: "Ensure SSH MaxSessions is set to 4 or less"
    description: "The MaxSessions parameter specifies the maximum number of open sessions permitted from a given connection."
    rationale: "To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon."
    remediation: "Edit the /etc/ssh/sshd_config file to set the parameter as follows: MaxSessions 4"
    compliance:
      - cis: ["5.2.19"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sshd -T -> d:^\s*maxsessions\s+(\d+) compare <= 4'

# 5.2.20 Ensure system-wide crypto policy is not over-ridden (Scored)
  - id: 5584
    title: "Ensure system-wide crypto policy is not over-ridden"
    description: "System-wide Crypto policy can be over-ridden or opted out of for openSSH"
    rationale: "Over-riding or opting out of the system-wide crypto policy could allow for the use of less secure Ciphers, MACs, KexAlgoritms and GSSAPIKexAlgorithsm"
    remediation: "Run the following commands: # sed -ri \"s/^\\s*(CRYPTO_POLICY\\s*=.*)$/# \\1/\" /etc/sysconfig/sshd; # systemctl reload sshd"
    compliance:
      - cis: ["5.2.20"]
      - cis_csc: ["14.4"]
    condition: none
    rules:
      - 'f:/etc/sysconfig/sshd -> r:^\s*CRYPTO_POLICY='

###############################################
# 5.3 Configure authselect
###############################################
# 5.3.1 Create custom authselect profile (Scored)
  - id: 5585
    title: "Create custom authselect profile"
    description: "A custom profile can be created by copying and customizing one of the default profiles. The default profiles include: sssd, winbind, or the nis."
    rationale: "A custom profile is required to customize many of the pam options"
    remediation: "Run the following command to create a custom authselect profile: # authselect create-profile <custom-profile name> -b <default profile to copy> .Example: # authselect create-profile custom-profile -b sssd --symlink-meta"
    compliance:
      - cis: ["5.3.1"]
    condition: all
    rules:
      - 'c:authselect current -> r:^Profile ID: custom/'

# 5.3.3 Ensure authselect includes with-faillock (Scored)
  - id: 5586
    title: "Ensure authselect includes with-faillock"
    description: "The pam_faillock.so module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than deny consecutive failed authentications. It stores the failure records into per-user files in the tally directory."
    rationale: "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
    remediation: "Run the following command to include the with-faillock option: # authselect select <PROFILE NAME> with-faillock .Example: # authselect select custom/custom-profile with-sudo with-faillock without-nullok"
    compliance:
      - cis: ["5.3.3"]
    condition: all
    rules:
      - 'c:authselect current -> r:with-faillock'
      - 'f:/etc/authselect/authselect.conf -> r:with-faillock'

###############################################
# 5.4 Configure PAM
###############################################
# 5.4.1 Ensure password creation requirements are configured (Scored)
  - id: 5587
    title: "Ensure password creation requirements are configured"
    description: "The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options. try_first_pass - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password. retry=3 - Allow 3 tries before sending back a failure. minlen=14 - password must be 14 characters or more Either of the following can be used to enforce complex passwords: minclass=4 - provide at least four classes of characters for the new password OR dcredit=-1 - provide at least one digit ucredit=-1 - provide at least one uppercase character ocredit=-1 - provide at least one special character lcredit=-1 - provide at least one lowercase character The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies"
    rationale: "Strong passwords protect systems from being hacked through brute force methods."
    remediation: "Edit the file /etc/security/pwquality.conf and add or modify the following line for password length to conform to site policy: minlen = 14 Edit the file /etc/security/pwquality.conf and add or modify the following line for password complexity to conform to site policy: minclass = 4 OR dcredit = -1 ucredit = -1 ocredit = -1 -1 = -1 Run the following to update the system-auth and password-auth files: CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/) for FN in system-auth password-auth; do [[ -n $CP ]] && PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN [[ -z $(grep -E '^\\s*password\\s+requisite\\s+pam_pwquality.so\\s+.*enforce-for-root\\s*.*$' $PTF) ]] && sed -ri 's/^\\s*(password\\s+requisite\\s+pam_pwquality.so\\s+)(.*)$/\\1\\2 enforce-for-root/' $PTF [[ -n $(grep -E '^\\s*password\\s+requisite\\s+pam_pwquality.so\\s+.*\\s+retry=\\S+\\s*.*$' $PTF) ]] && sed -ri '/pwquality/s/retry=\\S+/retry=3/' $PTF || sed -ri 's/^\\s*(password\\s+requisite\\s+pam_pwquality.so\\s+)(.*)$/\\1\\2 retry=3/' $PTF done authselect apply-changes"
    compliance:
      - cis: ["5.4.1"]
      - cis_csc: ["4.4"]
    condition: all
    rules:
      - 'c:grep pam_pwquality.so /etc/pam.d/password-auth -> r:try_first_pass'
      - 'c:grep pam_pwquality.so /etc/pam.d/system-auth -> r:try_first_pass'
      - 'f:/etc/security/pwquality.conf -> n:^\s*minlen\s+\t*=\s+\t*(\d+) compare >= 14'

# 5.4.2 Ensure lockout for failed password attempts is configured (Scored)
  - id: 5588
    title: "Ensure lockout for failed password attempts is configured"
    description: "Lock out users after n unsuccessful consecutive login attempts. deny= - Number of attempts before the account is locked. unlock_time= - Time in seconds before the account is unlocked. Set the lockout number and unlock time to follow local site policy."
    rationale: "Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems."
    remediation: "Set password lockouts and unlock times to conform to site policy. Run the following to update the system-auth and password-auth files. This script will update/add the deny=5 and unlock_time=900 options. This script should be modified as needed to follow local site policy.CP=$(authselect current | awk \"NR == 1 {print $3}\" | grep custom/) for FN in system-auth password-auth; do [[ -n $CP ]] && PTF=/etc/authselect/$CP/$FN || PTF=/etc/authselect/$FN [[ -n $(grep -E \"^\\s*auth\\s+required\\s+pam_faillock.so\\s+.*deny=\\S+\\s*.*$\" $PTF) ]] && sed -ri \"/pam_faillock.so/s/deny=\\S+/deny=5/g\" $PTF || sed -ri \"s/^\\^\\s*(auth\\s+required\\s+pam_faillock\\.so\\s+)(.*[^{}])(\\{.*\\}|)$/\\1\\2 deny=5 \\3/\" $PTF [[ -n $(grep -E \"^\\s*auth\\s+required\\s+pam_faillock.so\\s+.*unlock_time=\\S+\\s*.*$\" $PTF) ]] && sed -ri \"/pam_faillock.so/s/unlock_time=\\S+/unlock_time=900/g\" $PTF || sed -ri \"s/^\\s*(auth\\s+required\\s+pam_faillock\\.so\\s+)(.*[^{}])(\\{.*\\}|)$/\\1\\2 unlock_time=900 \\3/\" $PTF done authselect apply-changes"
    compliance:
      - cis: ["5.4.2"]
      - cis_csc: ["16.7"]
    condition: none
    rules:
      - 'f:/etc/pam.d/password-auth -> r:^\s*auth\s+required\s+pam_faillock.so\s+ && n:deny\s+=\s+(\d+) compare > 5 && n:unlock_time\s+=\s+(\d+) compare < 900'
      - 'f:/etc/pam.d/system-auth -> r:^\s*auth\s+required\s+pam_faillock.so\s+ && n:deny\s+=\s+(\d+) compare > 5 && n:unlock_time\s+=\s+(\d+) compare < 900'

# 5.4.3 Ensure password reuse is limited (Scored)
  - id: 5589
    title: "Ensure password reuse is limited"
    description: "The /etc/security/opasswd file stores the users\" old passwords and can be checked to ensure that users are not recycling recent passwords. remember=<5> - Number of old passwords to remember"
    rationale: "Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password. Note that these change only apply to accounts configured on the local system."
    remediation: "Set remembered password history to conform to site policy. Run the folloing script to add or modify the pam_pwhistory.so and pam_unix.so lines to include the remember option: CP=$(authselect current | awk \"NR == 1 {print $3}\" | grep custom/) [[ -n $CP ]] && PTF=/etc/authselect/$CP/system-auth || PTF=/etc/authselect/system-auth [[ -n $(grep -E \"^\\s*password\\s+(sufficient\\s+pam_unix|requi(red|site)\\s+pam_pwhistory).so\\s+ ([^#]+\\s+)*remember=\\S+\\s*.*$\" $PTF) ]] && sed -ri \"s/^\\s*(password\\s+(requisite|sufficient)\\s+(pam_pwquality\\.so|pam_unix\\.so)\\s+)(.*)(remember=\\S+\\s*)(.*)$/\\1\\4 remember=5 \\6/\" $PTF || sed -ri \"s/^\\s*(password\\s+(requisite|sufficient)\\s+(pam_pwquality\\.so|pam_unix\\.so)\\s+)(.*)$/\\1\\4 remember=5/\" $PTF authselect apply-changes"
    compliance:
      - cis: ["5.4.3"]
      - cis_csc: ["16"]
    condition: none
    rules:
      - 'f:/etc/pam.d/system-auth -> r:^\s*password\s+requisite\s+pam_pwquality\.so\s+ && n:remember\s+=\s+(\d+) compare < 5'
      - 'f:/etc/pam.d/system-auth -> r:^\s*password\s+sufficient\s+pam_unix\.so\s+ && n:remember\s+=\s+(\d+) compare < 5'

# 5.4.4 Ensure password hashing algorithm is SHA-512 (Scored)
  - id: 5590
    title: "Ensure password hashing algorithm is SHA-512"
    description: "The commands below change password encryption from md5 to sha512 (a much stronger hashing algorithm). All existing accounts will need to perform a password change to upgrade the stored hashes to the new algorithm."
    rationale: "The SHA-512 algorithm provides much stronger hashing than MD5, thus providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords. Note that these change only apply to accounts configured on the local system."
    remediation: "Set password hashing algorithm to sha512. Run the following script to dd or modify the pam_unix.so lines in the password-auth and system-auth files to include the sha512 option: CP=$(authselect current | awk 'NR == 1 {print $3}' | grep custom/) for FN in system-auth password-auth; do [[ -z $(grep -E '^\\s*password\\s+sufficient\\s+pam_unix.so\\s+.*sha512\\s*.*$' $PTF) ]] && sed -ri 's/^\\s*(password\\s+sufficient\\s+pam_unix.so\\s+)(.*)$/\\1\\2 sha512/' $PTF done authselect apply-changes"
    compliance:
      - cis: ["5.4.4"]
      - cis_csc: ["16.4"]
    condition: all
    rules:
      - 'f:/etc/pam.d/password-auth -> r:^\s*password\s+requisite\s+pam_unix\.so\s+ && r:sha512'
      - 'f:/etc/pam.d/system-auth -> r:^\s*password\s+sufficient\s+pam_unix\.so\s+ && r:sha512'

###############################################
# 5.5 User Accounts and Environment
###############################################
###############################################
# 5.5.1 Set Shadow Password Suite Parameters
###############################################
# 5.5.1.1 Ensure password expiration is 365 days or less (Scored)
  - id: 5691
    title: "Ensure password expiration is 365 days or less"
    description: "The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the PASS_MAX_DAYS parameter be set to less than or equal to 365 days."
    rationale: "The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity."
    remediation: "Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs : PASS_MAX_DAYS 90 and modify user parameters for all users with a password set to match: chage --maxdays 90 <user>"
    compliance:
      - cis: ["5.5.1.1"]
      - cis_csc: ["4.4"]
      - pci_dss: ["8.2.4"]
    condition: all
    rules:
      - 'f:/etc/login.defs -> n:^\s*PASS_MAX_DAYS\s*\t*(\d+) compare <= 365'

# 5.5.1.2 Ensure minimum days between password changes is 7 or more (Scored)
  - id: 5692 
    title: "Ensure minimum days between password changes is 7 or more"
    description: "The PASS_MIN_DAYS parameter in /etc/login.defs allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that PASS_MIN_DAYS parameter be set to 7 or more days."
    rationale: "By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls."
    remediation: "Set the PASS_MIN_DAYS parameter to 7 in /etc/login.defs: PASS_MIN_DAYS 7 and modify user parameters for all users with a password set to match: chage --mindays 7 <user>"
    compliance:
      - cis: ["5.5.1.2"]
      - cis_csc: ["4.4"]
      - pci_dss: ["3.6.1"]
    condition: all
    rules:
      - 'f:/etc/login.defs -> n:^\s*PASS_MIN_DAYS\s*\t*(\d+) compare >= 7'

# 5.5.1.3 Ensure password expiration warning days is 7 or more (Scored)
  - id: 5693
    title: "Ensure minimum days between password changes is 7 or more"
    description: "The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the PASS_WARN_AGE parameter be set to 7 or more days."
    rationale: "Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered."
    remediation: "Set the PASS_WARN_AGE parameter to 7 in /etc/login.defs: PASS_WARN_AGE 7 and modify user parameters for all users with a password set to match: chage --warndays 7 <user>"
    compliance:
      - cis: ["5.5.1.3"]
      - cis_csc: ["4.4"]
      - pci_dss: ["3.6.1"]
    condition: all
    rules:
      - 'f:/etc/login.defs -> n:^\s*PASS_WARN_AGE\s*\t*(\d+) compare >= 7'

# 5.4.1.4 Ensure inactive password lock is 30 days or less (Scored)
  - id: 5694 
    title: "Ensure inactive password lock is 30 days or less"
    description: "User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled."
    rationale: "Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies."
    remediation: "Run the following command to set the default password inactivity period to 30 days: useradd -D -f 30 and modify user parameters for all users with a password set to match: chage --inactive 30 <user>"
    compliance:
      - cis: ["5.4.1.4"]
      - cis_csc: ["4.4"]
      - pci_dss: ["3.6.1"]
    condition: all
    rules:
      - 'c:useradd -D -> n:^\s*INACTIVE\s*=\s*(\d+) compare <= 30'

# 5.5.3 Ensure default user shell timeout is 900 seconds or less (Scored)
  - id: 5595
    title: "Ensure default user shell timeout is 900 seconds or less"
    description: "The default TMOUT determines the shell timeout for users. The TMOUT value is measured in seconds."
    rationale: "Having no timeout value associated with a shell could allow an unauthorized user access to another user's shell session (e.g. user walks away from their computer and doesn't lock the screen). Setting a timeout value at least reduces the risk of this happening."
    remediation: "Edit the /etc/bashrc , /etc/profile and /etc/profile.d/*.sh files (and the appropriate files for any other shell supported on your system) and add or edit any umask parameters as follows: readonly TMOUT=900 ; export TMOUT . Note that setting the value to readonly prevents unwanted modification during runtime."
    compliance:
      - cis: ["5.5.3"]
      - cis_csc: ["16.11"]
    condition: all
    rules:
      - 'f:/etc/bashrc -> n:TMOUT\s*=\s*(\d+) compare <= 900'
      - 'f:/etc/profile -> n:TMOUT\s*=\s*(\d+) compare <= 900'
      - 'd:/etc/profile.d -> .sh -> n:TMOUT\s*=\s*(\d+) compare <= 900'

# 5.5.4 Ensure default group for the root account is GID 0 (Scored)
  - id: 5664 
    title: "Ensure default group for the root account is GID 0"
    description: "The usermod command can be used to specify which group the root user belongs to. This affects permissions of files that are created by the root user."
    rationale: "Using GID 0 for the root account helps prevent root -owned files from accidentally becoming accessible to non-privileged users."
    remediation: "Run the following command to set the root user default group to GID 0: usermod -g 0 root"
    compliance:
      - cis: ["5.5.4"]
      - cis_csc: ["5.1"]
      - pci_dss: ["3.6.1"]
    condition: all
    rules:
      - 'f:/etc/passwd -> r:^root:\w:\w:0'

# 5.5.5 Ensure default user umask is 027 or more restrictive (Scored)
  - id: 5765 
    title: "Ensure default user umask is 027 or more restrictive"
    description: "The default umask determines the permissions of files created by users. The user creating the file has the discretion of making their files and directories readable by others via the chmod command. Users who wish to allow their files and directories to be readable by others by default may choose a different default umask by inserting the umask command into the standard shell configuration files ( .profile , .bashrc , etc.) in their home directories."
    rationale: "Setting a very secure default value for umask ensures that users make a conscious choice about their file permissions. A default umask setting of 077 causes files and directories created by users to not be readable by any other user on the system. A umask of 027 would make files and directories readable by users in the same Unix group, while a umask of 022 would make files readable by every user on the system."
    remediation: "Edit the /etc/bashrc , /etc/profile and /etc/profile.d/*.sh files (and the appropriate files for any other shell supported on your system) and add or edit any umask parameters as follows: umask 027"
    compliance:
      - cis: ["5.5.5"]
      - cis_csc: ["5.1", "13"]
      - pci_dss: ["3.6.1"]
    condition: none
    rules:
      - 'f:/etc/bashrc -> n:^\s*\t*umask\s+(\d+) compare >= 027'
      - 'f:/etc/profile -> n:^\s*\t*umask\s+(\d+) compare >= 027'
      - 'd:/etc/profile.d -> .sh -> n:^\s*\t*umask\s+(\d+) compare >= 027'

# 5.7 Ensure access to the su command is restricted (Scored)
  - id: 5767 
    title: "Ensure access to the su command is restricted."
    description: "The su command allows a user to run a command or shell as another user. The program has been superseded by sudo , which allows for more granular control over privileged access. Normally, the su command can be executed by any user. By uncommenting the pam_wheel.so statement in /etc/pam.d/su , the su command will only allow users in the wheel group to execute su ."
    rationale: "Restricting the use of su , and using sudo in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via sudo , whereas su can only record that a user executed the su program."
    remediation: "Add the following line to the /etc/pam.d/su file: auth required pam_wheel.so use_uid"
    compliance:
      - cis: ["5.7"]
      - cis_csc: ["5.1"]
      - pci_dss: ["10.2.5"]
      - hipaa: ["164.312.b"]
      - nist_800_53: ["AU.14", "AC.7"]
      - gpg_13: ["7.8"]
      - gdpr_IV: ["35.7","32.2"]
    condition: all
    rules:
      - 'f:/etc/pam.d/su -> r:^auth\s*\t*required\s*\t*pam_wheel.so\s*\t*use_uid'



